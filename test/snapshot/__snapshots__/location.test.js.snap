// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test locations #164 : expr must include ; 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "loc": Location {
            "end": Position {
              "column": 2,
              "line": 1,
              "offset": 2,
            },
            "source": "$a",
            "start": Position {
              "column": 0,
              "line": 1,
              "offset": 0,
            },
          },
          "name": "a",
        },
        "loc": Location {
          "end": Position {
            "column": 12,
            "line": 1,
            "offset": 12,
          },
          "source": "$a = $b + 1;",
          "start": Position {
            "column": 0,
            "line": 1,
            "offset": 0,
          },
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 7,
                "line": 1,
                "offset": 7,
              },
              "source": "$b",
              "start": Position {
                "column": 5,
                "line": 1,
                "offset": 5,
              },
            },
            "name": "b",
          },
          "loc": Location {
            "end": Position {
              "column": 11,
              "line": 1,
              "offset": 11,
            },
            "source": "$b + 1",
            "start": Position {
              "column": 5,
              "line": 1,
              "offset": 5,
            },
          },
          "right": Number {
            "kind": "number",
            "loc": Location {
              "end": Position {
                "column": 11,
                "line": 1,
                "offset": 11,
              },
              "source": "1",
              "start": Position {
                "column": 10,
                "line": 1,
                "offset": 10,
              },
            },
            "value": "1",
          },
          "type": "+",
        },
      },
      "kind": "expressionstatement",
      "loc": Location {
        "end": Position {
          "column": 12,
          "line": 1,
          "offset": 12,
        },
        "source": "$a = $b + 1;",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 12,
      "line": 1,
      "offset": 12,
    },
    "source": "$a = $b + 1;",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations #164 : expr should avoid ?> 1`] = `
Program {
  "children": Array [
    ExpressionStatement {
      "expression": Assign {
        "kind": "assign",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "loc": Location {
            "end": Position {
              "column": 8,
              "line": 1,
              "offset": 8,
            },
            "source": "$a",
            "start": Position {
              "column": 6,
              "line": 1,
              "offset": 6,
            },
          },
          "name": "a",
        },
        "loc": Location {
          "end": Position {
            "column": 17,
            "line": 1,
            "offset": 17,
          },
          "source": "$a = $b + 1",
          "start": Position {
            "column": 6,
            "line": 1,
            "offset": 6,
          },
        },
        "operator": "=",
        "right": Bin {
          "kind": "bin",
          "left": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 13,
                "line": 1,
                "offset": 13,
              },
              "source": "$b",
              "start": Position {
                "column": 11,
                "line": 1,
                "offset": 11,
              },
            },
            "name": "b",
          },
          "loc": Location {
            "end": Position {
              "column": 17,
              "line": 1,
              "offset": 17,
            },
            "source": "$b + 1",
            "start": Position {
              "column": 11,
              "line": 1,
              "offset": 11,
            },
          },
          "right": Number {
            "kind": "number",
            "loc": Location {
              "end": Position {
                "column": 17,
                "line": 1,
                "offset": 17,
              },
              "source": "1",
              "start": Position {
                "column": 16,
                "line": 1,
                "offset": 16,
              },
            },
            "value": "1",
          },
          "type": "+",
        },
      },
      "kind": "expressionstatement",
      "loc": Location {
        "end": Position {
          "column": 17,
          "line": 1,
          "offset": 17,
        },
        "source": "$a = $b + 1",
        "start": Position {
          "column": 6,
          "line": 1,
          "offset": 6,
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 20,
      "line": 1,
      "offset": 20,
    },
    "source": "<?php $a = $b + 1 ?>",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations break 1`] = `
Program {
  "children": Array [
    Break {
      "kind": "break",
      "level": null,
      "loc": Location {
        "end": Position {
          "column": 6,
          "line": 1,
          "offset": 6,
        },
        "source": "break;",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 6,
      "line": 1,
      "offset": 6,
    },
    "source": "break;",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations class 1`] = `
Program {
  "children": Array [
    Class {
      "body": Array [],
      "extends": null,
      "implements": null,
      "isAbstract": false,
      "isAnonymous": false,
      "isFinal": false,
      "kind": "class",
      "loc": Location {
        "end": Position {
          "column": 12,
          "line": 1,
          "offset": 12,
        },
        "source": "class Foo {}",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "name": "Foo",
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 12,
      "line": 1,
      "offset": 12,
    },
    "source": "class Foo {}",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations continue 1`] = `
Program {
  "children": Array [
    Continue {
      "kind": "continue",
      "level": null,
      "loc": Location {
        "end": Position {
          "column": 9,
          "line": 1,
          "offset": 9,
        },
        "source": "continue;",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 9,
      "line": 1,
      "offset": 9,
    },
    "source": "continue;",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations declare 1`] = `
Program {
  "children": Array [
    Declare {
      "children": Array [],
      "kind": "declare",
      "loc": Location {
        "end": Position {
          "column": 17,
          "line": 1,
          "offset": 17,
        },
        "source": "declare(ticks=1);",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "mode": "none",
      "what": Object {
        "ticks": Number {
          "kind": "number",
          "loc": Location {
            "end": Position {
              "column": 15,
              "line": 1,
              "offset": 15,
            },
            "source": "1",
            "start": Position {
              "column": 14,
              "line": 1,
              "offset": 14,
            },
          },
          "value": "1",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 17,
      "line": 1,
      "offset": 17,
    },
    "source": "declare(ticks=1);",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations declare block 1`] = `
Program {
  "children": Array [
    Declare {
      "children": Array [
        Echo {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "loc": Location {
                "end": Position {
                  "column": 35,
                  "line": 1,
                  "offset": 35,
                },
                "source": "\\"something\\"",
                "start": Position {
                  "column": 24,
                  "line": 1,
                  "offset": 24,
                },
              },
              "raw": "\\"something\\"",
              "unicode": false,
              "value": "something",
            },
          ],
          "kind": "echo",
          "loc": Location {
            "end": Position {
              "column": 36,
              "line": 1,
              "offset": 36,
            },
            "source": "echo \\"something\\";",
            "start": Position {
              "column": 19,
              "line": 1,
              "offset": 19,
            },
          },
          "shortForm": false,
        },
      ],
      "kind": "declare",
      "loc": Location {
        "end": Position {
          "column": 38,
          "line": 1,
          "offset": 38,
        },
        "source": "declare(ticks=1) { echo \\"something\\"; }",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "mode": "block",
      "what": Object {
        "ticks": Number {
          "kind": "number",
          "loc": Location {
            "end": Position {
              "column": 15,
              "line": 1,
              "offset": 15,
            },
            "source": "1",
            "start": Position {
              "column": 14,
              "line": 1,
              "offset": 14,
            },
          },
          "value": "1",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 38,
      "line": 1,
      "offset": 38,
    },
    "source": "declare(ticks=1) { echo \\"something\\"; }",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations do 1`] = `
Program {
  "children": Array [
    Do {
      "body": Block {
        "children": Array [
          Echo {
            "arguments": Array [
              Variable {
                "byref": false,
                "curly": false,
                "kind": "variable",
                "loc": Location {
                  "end": Position {
                    "column": 12,
                    "line": 1,
                    "offset": 12,
                  },
                  "source": "$i",
                  "start": Position {
                    "column": 10,
                    "line": 1,
                    "offset": 10,
                  },
                },
                "name": "i",
              },
            ],
            "kind": "echo",
            "loc": Location {
              "end": Position {
                "column": 13,
                "line": 1,
                "offset": 13,
              },
              "source": "echo $i;",
              "start": Position {
                "column": 5,
                "line": 1,
                "offset": 5,
              },
            },
            "shortForm": false,
          },
        ],
        "kind": "block",
        "loc": Location {
          "end": Position {
            "column": 15,
            "line": 1,
            "offset": 15,
          },
          "source": "{ echo $i; }",
          "start": Position {
            "column": 3,
            "line": 1,
            "offset": 3,
          },
        },
      },
      "kind": "do",
      "loc": Location {
        "end": Position {
          "column": 28,
          "line": 1,
          "offset": 28,
        },
        "source": "do { echo $i; } while(true);",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "test": Boolean {
        "kind": "boolean",
        "loc": Location {
          "end": Position {
            "column": 26,
            "line": 1,
            "offset": 26,
          },
          "source": "true",
          "start": Position {
            "column": 22,
            "line": 1,
            "offset": 22,
          },
        },
        "raw": "true",
        "value": true,
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 28,
      "line": 1,
      "offset": 28,
    },
    "source": "do { echo $i; } while(true);",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations echo 1`] = `
Program {
  "children": Array [
    Echo {
      "arguments": Array [
        String {
          "isDoubleQuote": true,
          "kind": "string",
          "loc": Location {
            "end": Position {
              "column": 16,
              "line": 1,
              "offset": 16,
            },
            "source": "\\"something\\"",
            "start": Position {
              "column": 5,
              "line": 1,
              "offset": 5,
            },
          },
          "raw": "\\"something\\"",
          "unicode": false,
          "value": "something",
        },
      ],
      "kind": "echo",
      "loc": Location {
        "end": Position {
          "column": 17,
          "line": 1,
          "offset": 17,
        },
        "source": "echo \\"something\\";",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "shortForm": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 17,
      "line": 1,
      "offset": 17,
    },
    "source": "echo \\"something\\";",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations for 1`] = `
Program {
  "children": Array [
    For {
      "body": Echo {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "loc": Location {
              "end": Position {
                "column": 45,
                "line": 1,
                "offset": 45,
              },
              "source": "\\"something\\"",
              "start": Position {
                "column": 34,
                "line": 1,
                "offset": 34,
              },
            },
            "raw": "\\"something\\"",
            "unicode": false,
            "value": "something",
          },
        ],
        "kind": "echo",
        "loc": Location {
          "end": Position {
            "column": 46,
            "line": 1,
            "offset": 46,
          },
          "source": "echo \\"something\\";",
          "start": Position {
            "column": 29,
            "line": 1,
            "offset": 29,
          },
        },
        "shortForm": false,
      },
      "increment": Array [
        Post {
          "kind": "post",
          "loc": Location {
            "end": Position {
              "column": 27,
              "line": 1,
              "offset": 27,
            },
            "source": "$i++",
            "start": Position {
              "column": 23,
              "line": 1,
              "offset": 23,
            },
          },
          "type": "+",
          "what": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 25,
                "line": 1,
                "offset": 25,
              },
              "source": "$i",
              "start": Position {
                "column": 23,
                "line": 1,
                "offset": 23,
              },
            },
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 7,
                "line": 1,
                "offset": 7,
              },
              "source": "$i",
              "start": Position {
                "column": 5,
                "line": 1,
                "offset": 5,
              },
            },
            "name": "i",
          },
          "loc": Location {
            "end": Position {
              "column": 11,
              "line": 1,
              "offset": 11,
            },
            "source": "$i = 1",
            "start": Position {
              "column": 5,
              "line": 1,
              "offset": 5,
            },
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "loc": Location {
              "end": Position {
                "column": 11,
                "line": 1,
                "offset": 11,
              },
              "source": "1",
              "start": Position {
                "column": 10,
                "line": 1,
                "offset": 10,
              },
            },
            "value": "1",
          },
        },
      ],
      "kind": "for",
      "loc": Location {
        "end": Position {
          "column": 46,
          "line": 1,
          "offset": 46,
        },
        "source": "for ($i = 1; $i <= 10; $i++) echo \\"something\\";",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 15,
                "line": 1,
                "offset": 15,
              },
              "source": "$i",
              "start": Position {
                "column": 13,
                "line": 1,
                "offset": 13,
              },
            },
            "name": "i",
          },
          "loc": Location {
            "end": Position {
              "column": 21,
              "line": 1,
              "offset": 21,
            },
            "source": "$i <= 10",
            "start": Position {
              "column": 13,
              "line": 1,
              "offset": 13,
            },
          },
          "right": Number {
            "kind": "number",
            "loc": Location {
              "end": Position {
                "column": 21,
                "line": 1,
                "offset": 21,
              },
              "source": "10",
              "start": Position {
                "column": 19,
                "line": 1,
                "offset": 19,
              },
            },
            "value": "10",
          },
          "type": "<=",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 46,
      "line": 1,
      "offset": 46,
    },
    "source": "for ($i = 1; $i <= 10; $i++) echo \\"something\\";",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations for block 1`] = `
Program {
  "children": Array [
    For {
      "body": Block {
        "children": Array [
          Echo {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "loc": Location {
                  "end": Position {
                    "column": 47,
                    "line": 1,
                    "offset": 47,
                  },
                  "source": "\\"something\\"",
                  "start": Position {
                    "column": 36,
                    "line": 1,
                    "offset": 36,
                  },
                },
                "raw": "\\"something\\"",
                "unicode": false,
                "value": "something",
              },
            ],
            "kind": "echo",
            "loc": Location {
              "end": Position {
                "column": 48,
                "line": 1,
                "offset": 48,
              },
              "source": "echo \\"something\\";",
              "start": Position {
                "column": 31,
                "line": 1,
                "offset": 31,
              },
            },
            "shortForm": false,
          },
        ],
        "kind": "block",
        "loc": Location {
          "end": Position {
            "column": 50,
            "line": 1,
            "offset": 50,
          },
          "source": "{ echo \\"something\\"; }",
          "start": Position {
            "column": 29,
            "line": 1,
            "offset": 29,
          },
        },
      },
      "increment": Array [
        Post {
          "kind": "post",
          "loc": Location {
            "end": Position {
              "column": 27,
              "line": 1,
              "offset": 27,
            },
            "source": "$i++",
            "start": Position {
              "column": 23,
              "line": 1,
              "offset": 23,
            },
          },
          "type": "+",
          "what": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 25,
                "line": 1,
                "offset": 25,
              },
              "source": "$i",
              "start": Position {
                "column": 23,
                "line": 1,
                "offset": 23,
              },
            },
            "name": "i",
          },
        },
      ],
      "init": Array [
        Assign {
          "kind": "assign",
          "left": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 7,
                "line": 1,
                "offset": 7,
              },
              "source": "$i",
              "start": Position {
                "column": 5,
                "line": 1,
                "offset": 5,
              },
            },
            "name": "i",
          },
          "loc": Location {
            "end": Position {
              "column": 11,
              "line": 1,
              "offset": 11,
            },
            "source": "$i = 1",
            "start": Position {
              "column": 5,
              "line": 1,
              "offset": 5,
            },
          },
          "operator": "=",
          "right": Number {
            "kind": "number",
            "loc": Location {
              "end": Position {
                "column": 11,
                "line": 1,
                "offset": 11,
              },
              "source": "1",
              "start": Position {
                "column": 10,
                "line": 1,
                "offset": 10,
              },
            },
            "value": "1",
          },
        },
      ],
      "kind": "for",
      "loc": Location {
        "end": Position {
          "column": 50,
          "line": 1,
          "offset": 50,
        },
        "source": "for ($i = 1; $i <= 10; $i++) { echo \\"something\\"; }",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "shortForm": false,
      "test": Array [
        Bin {
          "kind": "bin",
          "left": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 15,
                "line": 1,
                "offset": 15,
              },
              "source": "$i",
              "start": Position {
                "column": 13,
                "line": 1,
                "offset": 13,
              },
            },
            "name": "i",
          },
          "loc": Location {
            "end": Position {
              "column": 21,
              "line": 1,
              "offset": 21,
            },
            "source": "$i <= 10",
            "start": Position {
              "column": 13,
              "line": 1,
              "offset": 13,
            },
          },
          "right": Number {
            "kind": "number",
            "loc": Location {
              "end": Position {
                "column": 21,
                "line": 1,
                "offset": 21,
              },
              "source": "10",
              "start": Position {
                "column": 19,
                "line": 1,
                "offset": 19,
              },
            },
            "value": "10",
          },
          "type": "<=",
        },
      ],
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 50,
      "line": 1,
      "offset": 50,
    },
    "source": "for ($i = 1; $i <= 10; $i++) { echo \\"something\\"; }",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations foreach 1`] = `
Program {
  "children": Array [
    Foreach {
      "body": Echo {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "loc": Location {
              "end": Position {
                "column": 41,
                "line": 1,
                "offset": 41,
              },
              "source": "\\"something\\"",
              "start": Position {
                "column": 30,
                "line": 1,
                "offset": 30,
              },
            },
            "raw": "\\"something\\"",
            "unicode": false,
            "value": "something",
          },
        ],
        "kind": "echo",
        "loc": Location {
          "end": Position {
            "column": 42,
            "line": 1,
            "offset": 42,
          },
          "source": "echo \\"something\\";",
          "start": Position {
            "column": 25,
            "line": 1,
            "offset": 25,
          },
        },
        "shortForm": false,
      },
      "key": null,
      "kind": "foreach",
      "loc": Location {
        "end": Position {
          "column": 42,
          "line": 1,
          "offset": 42,
        },
        "source": "foreach ($arr as $value) echo \\"something\\";",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "shortForm": false,
      "source": Variable {
        "byref": false,
        "curly": false,
        "kind": "variable",
        "loc": Location {
          "end": Position {
            "column": 13,
            "line": 1,
            "offset": 13,
          },
          "source": "$arr",
          "start": Position {
            "column": 9,
            "line": 1,
            "offset": 9,
          },
        },
        "name": "arr",
      },
      "value": Variable {
        "byref": false,
        "curly": false,
        "kind": "variable",
        "loc": Location {
          "end": Position {
            "column": 23,
            "line": 1,
            "offset": 23,
          },
          "source": "$value",
          "start": Position {
            "column": 17,
            "line": 1,
            "offset": 17,
          },
        },
        "name": "value",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 42,
      "line": 1,
      "offset": 42,
    },
    "source": "foreach ($arr as $value) echo \\"something\\";",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations foreach block 1`] = `
Program {
  "children": Array [
    Foreach {
      "body": Block {
        "children": Array [
          Echo {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "loc": Location {
                  "end": Position {
                    "column": 43,
                    "line": 1,
                    "offset": 43,
                  },
                  "source": "\\"something\\"",
                  "start": Position {
                    "column": 32,
                    "line": 1,
                    "offset": 32,
                  },
                },
                "raw": "\\"something\\"",
                "unicode": false,
                "value": "something",
              },
            ],
            "kind": "echo",
            "loc": Location {
              "end": Position {
                "column": 44,
                "line": 1,
                "offset": 44,
              },
              "source": "echo \\"something\\";",
              "start": Position {
                "column": 27,
                "line": 1,
                "offset": 27,
              },
            },
            "shortForm": false,
          },
        ],
        "kind": "block",
        "loc": Location {
          "end": Position {
            "column": 46,
            "line": 1,
            "offset": 46,
          },
          "source": "{ echo \\"something\\"; }",
          "start": Position {
            "column": 25,
            "line": 1,
            "offset": 25,
          },
        },
      },
      "key": null,
      "kind": "foreach",
      "loc": Location {
        "end": Position {
          "column": 46,
          "line": 1,
          "offset": 46,
        },
        "source": "foreach ($arr as $value) { echo \\"something\\"; }",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "shortForm": false,
      "source": Variable {
        "byref": false,
        "curly": false,
        "kind": "variable",
        "loc": Location {
          "end": Position {
            "column": 13,
            "line": 1,
            "offset": 13,
          },
          "source": "$arr",
          "start": Position {
            "column": 9,
            "line": 1,
            "offset": 9,
          },
        },
        "name": "arr",
      },
      "value": Variable {
        "byref": false,
        "curly": false,
        "kind": "variable",
        "loc": Location {
          "end": Position {
            "column": 23,
            "line": 1,
            "offset": 23,
          },
          "source": "$value",
          "start": Position {
            "column": 17,
            "line": 1,
            "offset": 17,
          },
        },
        "name": "value",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 46,
      "line": 1,
      "offset": 46,
    },
    "source": "foreach ($arr as $value) { echo \\"something\\"; }",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations function 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "body": Block {
        "children": Array [
          Echo {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "loc": Location {
                  "end": Position {
                    "column": 32,
                    "line": 1,
                    "offset": 32,
                  },
                  "source": "\\"something\\"",
                  "start": Position {
                    "column": 21,
                    "line": 1,
                    "offset": 21,
                  },
                },
                "raw": "\\"something\\"",
                "unicode": false,
                "value": "something",
              },
            ],
            "kind": "echo",
            "loc": Location {
              "end": Position {
                "column": 33,
                "line": 1,
                "offset": 33,
              },
              "source": "echo \\"something\\";",
              "start": Position {
                "column": 16,
                "line": 1,
                "offset": 16,
              },
            },
            "shortForm": false,
          },
        ],
        "kind": "block",
        "loc": Location {
          "end": Position {
            "column": 35,
            "line": 1,
            "offset": 35,
          },
          "source": "{ echo \\"something\\"; }",
          "start": Position {
            "column": 14,
            "line": 1,
            "offset": 14,
          },
        },
      },
      "byref": false,
      "kind": "function",
      "loc": Location {
        "end": Position {
          "column": 35,
          "line": 1,
          "offset": 35,
        },
        "source": "function fn()",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "name": Identifier {
        "kind": "identifier",
        "loc": Location {
          "end": Position {
            "column": 11,
            "line": 1,
            "offset": 11,
          },
          "source": "fn",
          "start": Position {
            "column": 9,
            "line": 1,
            "offset": 9,
          },
        },
        "name": "fn",
      },
      "nullable": false,
      "type": null,
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 35,
      "line": 1,
      "offset": 35,
    },
    "source": "function fn() { echo \\"something\\"; }",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations global 1`] = `
Program {
  "children": Array [
    Global {
      "items": Array [
        Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "loc": Location {
            "end": Position {
              "column": 9,
              "line": 1,
              "offset": 9,
            },
            "source": "$a",
            "start": Position {
              "column": 7,
              "line": 1,
              "offset": 7,
            },
          },
          "name": "a",
        },
      ],
      "kind": "global",
      "loc": Location {
        "end": Position {
          "column": 10,
          "line": 1,
          "offset": 10,
        },
        "source": "global $a;",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 10,
      "line": 1,
      "offset": 10,
    },
    "source": "global $a;",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations goto 1`] = `
Program {
  "children": Array [
    Goto {
      "kind": "goto",
      "label": "a",
      "loc": Location {
        "end": Position {
          "column": 7,
          "line": 1,
          "offset": 7,
        },
        "source": "goto a;",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 7,
      "line": 1,
      "offset": 7,
    },
    "source": "goto a;",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations if/elseif/else 1`] = `
Program {
  "children": Array [
    If {
      "alternate": If {
        "alternate": Echo {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "loc": Location {
                "end": Position {
                  "column": 87,
                  "line": 1,
                  "offset": 87,
                },
                "source": "\\"something\\"",
                "start": Position {
                  "column": 76,
                  "line": 1,
                  "offset": 76,
                },
              },
              "raw": "\\"something\\"",
              "unicode": false,
              "value": "something",
            },
          ],
          "kind": "echo",
          "loc": Location {
            "end": Position {
              "column": 88,
              "line": 1,
              "offset": 88,
            },
            "source": "echo \\"something\\";",
            "start": Position {
              "column": 71,
              "line": 1,
              "offset": 71,
            },
          },
          "shortForm": false,
        },
        "body": Echo {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "loc": Location {
                "end": Position {
                  "column": 64,
                  "line": 1,
                  "offset": 64,
                },
                "source": "\\"something\\"",
                "start": Position {
                  "column": 53,
                  "line": 1,
                  "offset": 53,
                },
              },
              "raw": "\\"something\\"",
              "unicode": false,
              "value": "something",
            },
          ],
          "kind": "echo",
          "loc": Location {
            "end": Position {
              "column": 65,
              "line": 1,
              "offset": 65,
            },
            "source": "echo \\"something\\";",
            "start": Position {
              "column": 48,
              "line": 1,
              "offset": 48,
            },
          },
          "shortForm": false,
        },
        "kind": "if",
        "loc": Location {
          "end": Position {
            "column": 88,
            "line": 1,
            "offset": 88,
          },
          "source": "elseif ($a < $b) echo \\"something\\"; else echo \\"something\\";",
          "start": Position {
            "column": 31,
            "line": 1,
            "offset": 31,
          },
        },
        "shortForm": false,
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 41,
                "line": 1,
                "offset": 41,
              },
              "source": "$a",
              "start": Position {
                "column": 39,
                "line": 1,
                "offset": 39,
              },
            },
            "name": "a",
          },
          "loc": Location {
            "end": Position {
              "column": 46,
              "line": 1,
              "offset": 46,
            },
            "source": "$a < $b",
            "start": Position {
              "column": 39,
              "line": 1,
              "offset": 39,
            },
          },
          "right": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 46,
                "line": 1,
                "offset": 46,
              },
              "source": "$b",
              "start": Position {
                "column": 44,
                "line": 1,
                "offset": 44,
              },
            },
            "name": "b",
          },
          "type": "<",
        },
      },
      "body": Echo {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "loc": Location {
              "end": Position {
                "column": 29,
                "line": 1,
                "offset": 29,
              },
              "source": "\\"something\\"",
              "start": Position {
                "column": 18,
                "line": 1,
                "offset": 18,
              },
            },
            "raw": "\\"something\\"",
            "unicode": false,
            "value": "something",
          },
        ],
        "kind": "echo",
        "loc": Location {
          "end": Position {
            "column": 30,
            "line": 1,
            "offset": 30,
          },
          "source": "echo \\"something\\";",
          "start": Position {
            "column": 13,
            "line": 1,
            "offset": 13,
          },
        },
        "shortForm": false,
      },
      "kind": "if",
      "loc": Location {
        "end": Position {
          "column": 88,
          "line": 1,
          "offset": 88,
        },
        "source": "if ($a > $b) echo \\"something\\"; elseif ($a < $b) echo \\"something\\"; else echo \\"something\\";",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "loc": Location {
            "end": Position {
              "column": 6,
              "line": 1,
              "offset": 6,
            },
            "source": "$a",
            "start": Position {
              "column": 4,
              "line": 1,
              "offset": 4,
            },
          },
          "name": "a",
        },
        "loc": Location {
          "end": Position {
            "column": 11,
            "line": 1,
            "offset": 11,
          },
          "source": "$a > $b",
          "start": Position {
            "column": 4,
            "line": 1,
            "offset": 4,
          },
        },
        "right": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "loc": Location {
            "end": Position {
              "column": 11,
              "line": 1,
              "offset": 11,
            },
            "source": "$b",
            "start": Position {
              "column": 9,
              "line": 1,
              "offset": 9,
            },
          },
          "name": "b",
        },
        "type": ">",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 88,
      "line": 1,
      "offset": 88,
    },
    "source": "if ($a > $b) echo \\"something\\"; elseif ($a < $b) echo \\"something\\"; else echo \\"something\\";",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations if/elseif/else block 1`] = `
Program {
  "children": Array [
    If {
      "alternate": If {
        "alternate": Block {
          "children": Array [
            Echo {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "loc": Location {
                    "end": Position {
                      "column": 97,
                      "line": 1,
                      "offset": 97,
                    },
                    "source": "\\"something\\"",
                    "start": Position {
                      "column": 86,
                      "line": 1,
                      "offset": 86,
                    },
                  },
                  "raw": "\\"something\\"",
                  "unicode": false,
                  "value": "something",
                },
              ],
              "kind": "echo",
              "loc": Location {
                "end": Position {
                  "column": 98,
                  "line": 1,
                  "offset": 98,
                },
                "source": "echo \\"something\\";",
                "start": Position {
                  "column": 81,
                  "line": 1,
                  "offset": 81,
                },
              },
              "shortForm": false,
            },
          ],
          "kind": "block",
          "loc": Location {
            "end": Position {
              "column": 100,
              "line": 1,
              "offset": 100,
            },
            "source": "{ echo \\"something\\"; }",
            "start": Position {
              "column": 79,
              "line": 1,
              "offset": 79,
            },
          },
        },
        "body": Block {
          "children": Array [
            Echo {
              "arguments": Array [
                String {
                  "isDoubleQuote": true,
                  "kind": "string",
                  "loc": Location {
                    "end": Position {
                      "column": 70,
                      "line": 1,
                      "offset": 70,
                    },
                    "source": "\\"something\\"",
                    "start": Position {
                      "column": 59,
                      "line": 1,
                      "offset": 59,
                    },
                  },
                  "raw": "\\"something\\"",
                  "unicode": false,
                  "value": "something",
                },
              ],
              "kind": "echo",
              "loc": Location {
                "end": Position {
                  "column": 71,
                  "line": 1,
                  "offset": 71,
                },
                "source": "echo \\"something\\";",
                "start": Position {
                  "column": 54,
                  "line": 1,
                  "offset": 54,
                },
              },
              "shortForm": false,
            },
          ],
          "kind": "block",
          "loc": Location {
            "end": Position {
              "column": 73,
              "line": 1,
              "offset": 73,
            },
            "source": "{ echo \\"something\\"; }",
            "start": Position {
              "column": 52,
              "line": 1,
              "offset": 52,
            },
          },
        },
        "kind": "if",
        "loc": Location {
          "end": Position {
            "column": 100,
            "line": 1,
            "offset": 100,
          },
          "source": "elseif ($a < $b) { echo \\"something\\"; } else { echo \\"something\\"; }",
          "start": Position {
            "column": 35,
            "line": 1,
            "offset": 35,
          },
        },
        "shortForm": false,
        "test": Bin {
          "kind": "bin",
          "left": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 45,
                "line": 1,
                "offset": 45,
              },
              "source": "$a",
              "start": Position {
                "column": 43,
                "line": 1,
                "offset": 43,
              },
            },
            "name": "a",
          },
          "loc": Location {
            "end": Position {
              "column": 50,
              "line": 1,
              "offset": 50,
            },
            "source": "$a < $b",
            "start": Position {
              "column": 43,
              "line": 1,
              "offset": 43,
            },
          },
          "right": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 50,
                "line": 1,
                "offset": 50,
              },
              "source": "$b",
              "start": Position {
                "column": 48,
                "line": 1,
                "offset": 48,
              },
            },
            "name": "b",
          },
          "type": "<",
        },
      },
      "body": Block {
        "children": Array [
          Echo {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "loc": Location {
                  "end": Position {
                    "column": 31,
                    "line": 1,
                    "offset": 31,
                  },
                  "source": "\\"something\\"",
                  "start": Position {
                    "column": 20,
                    "line": 1,
                    "offset": 20,
                  },
                },
                "raw": "\\"something\\"",
                "unicode": false,
                "value": "something",
              },
            ],
            "kind": "echo",
            "loc": Location {
              "end": Position {
                "column": 32,
                "line": 1,
                "offset": 32,
              },
              "source": "echo \\"something\\";",
              "start": Position {
                "column": 15,
                "line": 1,
                "offset": 15,
              },
            },
            "shortForm": false,
          },
        ],
        "kind": "block",
        "loc": Location {
          "end": Position {
            "column": 34,
            "line": 1,
            "offset": 34,
          },
          "source": "{ echo \\"something\\"; }",
          "start": Position {
            "column": 13,
            "line": 1,
            "offset": 13,
          },
        },
      },
      "kind": "if",
      "loc": Location {
        "end": Position {
          "column": 100,
          "line": 1,
          "offset": 100,
        },
        "source": "if ($a > $b) { echo \\"something\\"; } elseif ($a < $b) { echo \\"something\\"; } else { echo \\"something\\"; }",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "shortForm": false,
      "test": Bin {
        "kind": "bin",
        "left": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "loc": Location {
            "end": Position {
              "column": 6,
              "line": 1,
              "offset": 6,
            },
            "source": "$a",
            "start": Position {
              "column": 4,
              "line": 1,
              "offset": 4,
            },
          },
          "name": "a",
        },
        "loc": Location {
          "end": Position {
            "column": 11,
            "line": 1,
            "offset": 11,
          },
          "source": "$a > $b",
          "start": Position {
            "column": 4,
            "line": 1,
            "offset": 4,
          },
        },
        "right": Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "loc": Location {
            "end": Position {
              "column": 11,
              "line": 1,
              "offset": 11,
            },
            "source": "$b",
            "start": Position {
              "column": 9,
              "line": 1,
              "offset": 9,
            },
          },
          "name": "b",
        },
        "type": ">",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 100,
      "line": 1,
      "offset": 100,
    },
    "source": "if ($a > $b) { echo \\"something\\"; } elseif ($a < $b) { echo \\"something\\"; } else { echo \\"something\\"; }",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations namespace 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [],
      "kind": "namespace",
      "loc": Location {
        "end": Position {
          "column": 18,
          "line": 1,
          "offset": 18,
        },
        "source": "namespace my\\\\name;",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "name": "my\\\\name",
      "withBrackets": false,
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 18,
      "line": 1,
      "offset": 18,
    },
    "source": "namespace my\\\\name;",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations namespace backets 1`] = `
Program {
  "children": Array [
    Namespace {
      "children": Array [
        Echo {
          "arguments": Array [
            String {
              "isDoubleQuote": true,
              "kind": "string",
              "loc": Location {
                "end": Position {
                  "column": 36,
                  "line": 1,
                  "offset": 36,
                },
                "source": "\\"something\\"",
                "start": Position {
                  "column": 25,
                  "line": 1,
                  "offset": 25,
                },
              },
              "raw": "\\"something\\"",
              "unicode": false,
              "value": "something",
            },
          ],
          "kind": "echo",
          "loc": Location {
            "end": Position {
              "column": 37,
              "line": 1,
              "offset": 37,
            },
            "source": "echo \\"something\\";",
            "start": Position {
              "column": 20,
              "line": 1,
              "offset": 20,
            },
          },
          "shortForm": false,
        },
      ],
      "kind": "namespace",
      "loc": Location {
        "end": Position {
          "column": 39,
          "line": 1,
          "offset": 39,
        },
        "source": "namespace my\\\\name { echo \\"something\\"; }",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "name": "my\\\\name",
      "withBrackets": true,
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 39,
      "line": 1,
      "offset": 39,
    },
    "source": "namespace my\\\\name { echo \\"something\\"; }",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations return 1`] = `
Program {
  "children": Array [
    Return {
      "expr": Number {
        "kind": "number",
        "loc": Location {
          "end": Position {
            "column": 8,
            "line": 1,
            "offset": 8,
          },
          "source": "1",
          "start": Position {
            "column": 7,
            "line": 1,
            "offset": 7,
          },
        },
        "value": "1",
      },
      "kind": "return",
      "loc": Location {
        "end": Position {
          "column": 9,
          "line": 1,
          "offset": 9,
        },
        "source": "return 1;",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 9,
      "line": 1,
      "offset": 9,
    },
    "source": "return 1;",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations static 1`] = `
Program {
  "children": Array [
    Static {
      "items": Array [
        Assign {
          "kind": "assign",
          "leadingComments": Location {
            "end": Position {
              "column": 13,
              "line": 1,
              "offset": 13,
            },
            "source": "$a = 1",
            "start": Position {
              "column": 7,
              "line": 1,
              "offset": 7,
            },
          },
          "left": Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "loc": Location {
              "end": Position {
                "column": 9,
                "line": 1,
                "offset": 9,
              },
              "source": "$a",
              "start": Position {
                "column": 7,
                "line": 1,
                "offset": 7,
              },
            },
            "name": "a",
          },
          "operator": null,
          "right": Number {
            "kind": "number",
            "loc": Location {
              "end": Position {
                "column": 13,
                "line": 1,
                "offset": 13,
              },
              "source": "1",
              "start": Position {
                "column": 12,
                "line": 1,
                "offset": 12,
              },
            },
            "value": "1",
          },
        },
      ],
      "kind": "static",
      "loc": Location {
        "end": Position {
          "column": 14,
          "line": 1,
          "offset": 14,
        },
        "source": "static $a = 1;",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 14,
      "line": 1,
      "offset": 14,
    },
    "source": "static $a = 1;",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations switch 1`] = `
Program {
  "children": Array [
    Switch {
      "body": Block {
        "children": Array [],
        "kind": "block",
        "loc": Location {
          "end": Position {
            "column": 14,
            "line": 1,
            "offset": 14,
          },
          "source": "{}",
          "start": Position {
            "column": 12,
            "line": 1,
            "offset": 12,
          },
        },
      },
      "kind": "switch",
      "loc": Location {
        "end": Position {
          "column": 14,
          "line": 1,
          "offset": 14,
        },
        "source": "switch ($i) {}",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "shortForm": false,
      "test": Variable {
        "byref": false,
        "curly": false,
        "kind": "variable",
        "loc": Location {
          "end": Position {
            "column": 10,
            "line": 1,
            "offset": 10,
          },
          "source": "$i",
          "start": Position {
            "column": 8,
            "line": 1,
            "offset": 8,
          },
        },
        "name": "i",
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 14,
      "line": 1,
      "offset": 14,
    },
    "source": "switch ($i) {}",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations try 1`] = `
Program {
  "children": Array [
    Try {
      "always": null,
      "body": ExpressionStatement {
        "expression": New {
          "arguments": Array [],
          "kind": "new",
          "loc": Location {
            "end": Position {
              "column": 20,
              "line": 1,
              "offset": 20,
            },
            "source": "Exception();",
            "start": Position {
              "column": 8,
              "line": 1,
              "offset": 8,
            },
          },
          "what": ClassReference {
            "kind": "classreference",
            "loc": Location {
              "end": Position {
                "column": 17,
                "line": 1,
                "offset": 17,
              },
              "source": "Exception",
              "start": Position {
                "column": 8,
                "line": 1,
                "offset": 8,
              },
            },
            "name": "Exception",
            "resolution": "uqn",
          },
        },
        "kind": "expressionstatement",
        "loc": Location {
          "end": Position {
            "column": 20,
            "line": 1,
            "offset": 20,
          },
          "source": "new Exception();",
          "start": Position {
            "column": 4,
            "line": 1,
            "offset": 4,
          },
        },
      },
      "catches": Array [],
      "kind": "try",
      "loc": Location {
        "end": Position {
          "column": 20,
          "line": 1,
          "offset": 20,
        },
        "source": "try new Exception();",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 20,
      "line": 1,
      "offset": 20,
    },
    "source": "try new Exception();",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations unset 1`] = `
Program {
  "children": Array [
    Unset {
      "arguments": Array [
        Variable {
          "byref": false,
          "curly": false,
          "kind": "variable",
          "loc": Location {
            "end": Position {
              "column": 10,
              "line": 1,
              "offset": 10,
            },
            "source": "$foo",
            "start": Position {
              "column": 6,
              "line": 1,
              "offset": 6,
            },
          },
          "name": "foo",
        },
      ],
      "kind": "unset",
      "loc": Location {
        "end": Position {
          "column": 12,
          "line": 1,
          "offset": 12,
        },
        "source": "unset($foo);",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 12,
      "line": 1,
      "offset": 12,
    },
    "source": "unset($foo);",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations while 1`] = `
Program {
  "children": Array [
    While {
      "body": Echo {
        "arguments": Array [
          String {
            "isDoubleQuote": true,
            "kind": "string",
            "loc": Location {
              "end": Position {
                "column": 28,
                "line": 1,
                "offset": 28,
              },
              "source": "\\"something\\"",
              "start": Position {
                "column": 17,
                "line": 1,
                "offset": 17,
              },
            },
            "raw": "\\"something\\"",
            "unicode": false,
            "value": "something",
          },
        ],
        "kind": "echo",
        "loc": Location {
          "end": Position {
            "column": 29,
            "line": 1,
            "offset": 29,
          },
          "source": "echo \\"something\\";",
          "start": Position {
            "column": 12,
            "line": 1,
            "offset": 12,
          },
        },
        "shortForm": false,
      },
      "kind": "while",
      "loc": Location {
        "end": Position {
          "column": 29,
          "line": 1,
          "offset": 29,
        },
        "source": "while(true) echo \\"something\\";",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "shortForm": false,
      "test": Boolean {
        "kind": "boolean",
        "loc": Location {
          "end": Position {
            "column": 10,
            "line": 1,
            "offset": 10,
          },
          "source": "true",
          "start": Position {
            "column": 6,
            "line": 1,
            "offset": 6,
          },
        },
        "raw": "true",
        "value": true,
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 29,
      "line": 1,
      "offset": 29,
    },
    "source": "while(true) echo \\"something\\";",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;

exports[`Test locations while block 1`] = `
Program {
  "children": Array [
    While {
      "body": Block {
        "children": Array [
          Echo {
            "arguments": Array [
              String {
                "isDoubleQuote": true,
                "kind": "string",
                "loc": Location {
                  "end": Position {
                    "column": 30,
                    "line": 1,
                    "offset": 30,
                  },
                  "source": "\\"something\\"",
                  "start": Position {
                    "column": 19,
                    "line": 1,
                    "offset": 19,
                  },
                },
                "raw": "\\"something\\"",
                "unicode": false,
                "value": "something",
              },
            ],
            "kind": "echo",
            "loc": Location {
              "end": Position {
                "column": 31,
                "line": 1,
                "offset": 31,
              },
              "source": "echo \\"something\\";",
              "start": Position {
                "column": 14,
                "line": 1,
                "offset": 14,
              },
            },
            "shortForm": false,
          },
        ],
        "kind": "block",
        "loc": Location {
          "end": Position {
            "column": 33,
            "line": 1,
            "offset": 33,
          },
          "source": "{ echo \\"something\\"; }",
          "start": Position {
            "column": 12,
            "line": 1,
            "offset": 12,
          },
        },
      },
      "kind": "while",
      "loc": Location {
        "end": Position {
          "column": 33,
          "line": 1,
          "offset": 33,
        },
        "source": "while(true) { echo \\"something\\"; }",
        "start": Position {
          "column": 0,
          "line": 1,
          "offset": 0,
        },
      },
      "shortForm": false,
      "test": Boolean {
        "kind": "boolean",
        "loc": Location {
          "end": Position {
            "column": 10,
            "line": 1,
            "offset": 10,
          },
          "source": "true",
          "start": Position {
            "column": 6,
            "line": 1,
            "offset": 6,
          },
        },
        "raw": "true",
        "value": true,
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
  "loc": Location {
    "end": Position {
      "column": 33,
      "line": 1,
      "offset": 33,
    },
    "source": "while(true) { echo \\"something\\"; }",
    "start": Position {
      "column": 0,
      "line": 1,
      "offset": 0,
    },
  },
}
`;
